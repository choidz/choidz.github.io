{"version":3,"file":"static/js/200.7dd70ab7.chunk.js","mappings":"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","sources":["blog/post-list.js","blog/layout.js","blog/posts.js","blog/utils.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { blogPaths } from \"../routes/paths\";\nimport postsData from \"./posts\";\nimport { formatDate } from \"./utils\";\n\nfunction EmptyState({ activeTag }) {\n  return (\n    <div className='rounded-2xl border border-dashed border-gray-300 bg-white p-10 text-center text-gray-500'>\n      {activeTag\n        ? `'${activeTag}' 태그로 등록된 글이 없습니다. 다른 태그를 선택해 보세요!`\n        : \"아직 등록된 글이 없습니다. 조금만 기다려 주세요!\"}\n    </div>\n  );\n}\n\nexport default function PostList({\n  posts: providedPosts,\n  title,\n  activeTag,\n  onTagClick,\n}) {\n  const handleTagClick = (event, tag) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (onTagClick) {\n      onTagClick(tag);\n    }\n  };\n\n  const sourcePosts = providedPosts ?? postsData;\n  const sortedPosts = [...sourcePosts].sort(\n    (a, b) => new Date(b.date) - new Date(a.date)\n  );\n\n  if (!sortedPosts.length) {\n    return <EmptyState activeTag={activeTag} />;\n  }\n\n  return (\n    <div className='space-y-3'>\n      {title ? (\n        <h2 className='text-lg font-semibold text-slate-900'>{title}</h2>\n      ) : null}\n      {sortedPosts.map((post) => {\n        const readingTime = post.readingMinutes ?? 1;\n        return (\n          <article\n            key={post.slug}\n            className='group overflow-hidden rounded-2xl border border-slate-200 bg-white transition hover:border-indigo-200 hover:shadow-md'>\n            <Link\n              to={blogPaths.detailOf(post.slug)}\n              className='flex h-full flex-col gap-4 px-6 py-5 sm:px-8 sm:py-6'>\n              <div className='flex flex-wrap items-center gap-2 text-xs text-slate-500 sm:text-sm'>\n                <time dateTime={post.date}>{formatDate(post.date)}</time>\n                <span className='hidden text-slate-300 sm:inline'>•</span>\n                <span>{`${readingTime}분 분량`}</span>\n              </div>\n              <div>\n                <h2 className='text-xl font-semibold text-slate-900 transition group-hover:text-indigo-600 sm:text-2xl'>\n                  {post.title}\n                </h2>\n                <p className='mt-2 text-sm leading-relaxed text-slate-600 sm:text-base'>\n                  {post.description}\n                </p>\n              </div>\n              <div className='flex flex-wrap gap-2'>\n                {post.tags?.map((tag) => {\n                  const isActive = activeTag === tag;\n                  return (\n                    <button\n                      key={tag}\n                      type='button'\n                      onClick={(event) => handleTagClick(event, tag)}\n                      className={`rounded-full px-3 py-1 text-xs font-medium transition focus:outline-none focus:ring-2 focus:ring-offset-1 ${\n                        isActive\n                          ? \"bg-indigo-600 text-white focus:ring-indigo-300\"\n                          : \"bg-indigo-50 text-indigo-600 hover:bg-indigo-100\"\n                      }`}>\n                      {tag}\n                    </button>\n                  );\n                })}\n              </div>\n              <div className='mt-auto flex items-center justify-between text-xs text-slate-500 sm:text-sm'>\n                <span>{`${readingTime}분 분량`}</span>\n                <span className='inline-flex items-center gap-1 font-medium text-indigo-600'>\n                  계속 읽기\n                  <svg\n                    aria-hidden='true'\n                    className='h-3.5 w-3.5'\n                    fill='none'\n                    viewBox='0 0 12 12'>\n                    <path\n                      d='M4 2l4 4-4 4'\n                      stroke='currentColor'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      strokeWidth='1.5'\n                    />\n                  </svg>\n                </span>\n              </div>\n            </Link>\n          </article>\n        );\n      })}\n    </div>\n  );\n}\n","import { useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { blogPaths, portfolioPath } from \"../routes/paths\";\nimport PostList from \"./post-list\";\nimport posts from \"./posts\";\nimport { formatDate } from \"./utils\";\n\nconst primaryLinks = [\n  { label: \"블로그\", path: blogPaths.home, isPrimary: true },\n  { label: \"포트폴리오\", path: portfolioPath, isPrimary: false },\n];\n\nfunction SiteHeader() {\n  return (\n    <header className='border-b border-slate-200 bg-white'>\n      <div className='mx-auto flex h-16 w-full max-w-6xl items-center justify-between gap-4 px-4 sm:px-6'>\n        <Link\n          to={blogPaths.home}\n          className='inline-flex items-center gap-2 text-xl font-bold text-slate-900'>\n          <span className='rounded-md bg-indigo-100 px-2.5 py-1 text-sm font-semibold text-indigo-600'>\n            최오키\n          </span>\n          <span className='hidden sm:inline text-slate-600'>Tech Notes</span>\n        </Link>\n        <div className='hidden w-full max-w-md md:block'>\n          <label className='relative block'>\n            <span className='sr-only'>검색</span>\n            <input\n              className='w-full rounded-full border border-slate-200 bg-slate-50 py-2 pl-10 pr-4 text-sm text-slate-700 placeholder:text-slate-400 focus:border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-200'\n              placeholder='키워드로 글을 검색해 보세요'\n              type='search'\n            />\n            <svg\n              aria-hidden='true'\n              className='absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-slate-400'\n              fill='none'\n              viewBox='0 0 16 16'>\n              <path\n                d='M11.25 11.25L14 14'\n                stroke='currentColor'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth='1.5'\n              />\n              <circle\n                cx='7.5'\n                cy='7.5'\n                r='4.75'\n                stroke='currentColor'\n                strokeWidth='1.5'\n              />\n            </svg>\n          </label>\n        </div>\n        <nav className='flex items-center gap-2 text-sm font-medium text-slate-600'>\n          {primaryLinks.map(({ label, path, isPrimary }) => (\n            <Link\n              key={label}\n              to={path}\n              className={`inline-flex items-center rounded-full px-4 py-1.5 transition ${\n                isPrimary\n                  ? \"bg-indigo-600 text-white shadow-sm hover:bg-indigo-700\"\n                  : \"border border-slate-200 text-slate-600 hover:border-indigo-200 hover:bg-indigo-50 hover:text-indigo-600\"\n              }`}>\n              {label}\n            </Link>\n          ))}\n        </nav>\n      </div>\n    </header>\n  );\n}\n\nfunction FeaturedPost({ post, activeTag, onTagClick }) {\n  if (!post) {\n    return null;\n  }\n\n  const readingTime = post.readingMinutes ?? 1;\n  const gradient = post.coverGradient ?? \"from-indigo-500 to-blue-500\";\n\n  const handleTagClick = (event, tag) => {\n    event.preventDefault();\n    event.stopPropagation();\n    onTagClick?.(tag);\n  };\n\n  return (\n    <article className='group overflow-hidden rounded-3xl border border-slate-200 bg-white shadow-sm transition hover:border-indigo-200 hover:shadow-lg'>\n      <Link to={blogPaths.detailOf(post.slug)} className='flex h-full flex-col'>\n        <div\n          aria-hidden='true'\n          className={`h-48 w-full bg-gradient-to-br ${gradient} opacity-90 transition duration-300 group-hover:opacity-100`}\n        />\n        <div className='flex flex-1 flex-col gap-5 px-8 py-8'>\n          <div className='flex flex-wrap items-center gap-3 text-sm text-slate-500'>\n            <time dateTime={post.date}>{formatDate(post.date)}</time>\n            <span className='hidden text-slate-300 sm:inline'>•</span>\n            <span>{`${readingTime}분 분량`}</span>\n          </div>\n          <div className='space-y-3'>\n            <h1 className='text-3xl font-bold leading-tight text-slate-900 transition group-hover:text-indigo-600 sm:text-4xl'>\n              {post.title}\n            </h1>\n            <p className='text-base leading-relaxed text-slate-600 sm:text-lg'>\n              {post.description}\n            </p>\n          </div>\n          <div className='flex flex-wrap gap-2'>\n            {post.tags?.map((tag) => {\n              const isActive = activeTag === tag;\n              return (\n                <button\n                  key={tag}\n                  type='button'\n                  onClick={(event) => handleTagClick(event, tag)}\n                  className={`rounded-full px-3 py-1 text-xs font-medium transition focus:outline-none focus:ring-2 focus:ring-offset-1 ${\n                    isActive\n                      ? \"bg-indigo-600 text-white focus:ring-indigo-300\"\n                      : \"bg-indigo-50 text-indigo-600 hover:bg-indigo-100\"\n                  }`}>\n                  {tag}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      </Link>\n    </article>\n  );\n}\n\nfunction LatestStack({ items }) {\n  if (!items?.length) {\n    return null;\n  }\n\n  return (\n    <section className='rounded-2xl border border-slate-200 bg-white'>\n      <div className='border-b border-slate-100 px-5 py-4'>\n        <h2 className='text-sm font-semibold uppercase tracking-widest text-slate-500'>\n          최신 등록 글\n        </h2>\n      </div>\n      <ol className='space-y-4 px-5 py-5'>\n        {items.map((post, index) => (\n          <li key={post.slug} className='flex items-start gap-3'>\n            <span className='mt-0.5 inline-flex h-6 w-6 items-center justify-center rounded-full bg-slate-100 text-xs font-semibold text-slate-500'>\n              {index + 1}\n            </span>\n            <div className='space-y-1'>\n              <Link\n                to={blogPaths.detailOf(post.slug)}\n                className='text-sm font-semibold text-slate-800 transition hover:text-indigo-600'>\n                {post.title}\n              </Link>\n              <p className='text-xs text-slate-500'>{formatDate(post.date)}</p>\n            </div>\n          </li>\n        ))}\n      </ol>\n    </section>\n  );\n}\n\nfunction TagSuggestions({ tags, activeTag, onTagClick }) {\n  if (!tags?.length) {\n    return null;\n  }\n\n  const handleClick = (tag) => {\n    onTagClick?.(tag);\n  };\n\n  return (\n    <section className='rounded-2xl border border-slate-200 bg-white'>\n      <div className='border-b border-slate-100 px-5 py-4'>\n        <h2 className='text-sm font-semibold uppercase tracking-widest text-slate-500'>\n          태그\n        </h2>\n      </div>\n      <div className='flex flex-wrap gap-2 px-5 py-5'>\n        <button\n          type='button'\n          onClick={() => handleClick(null)}\n          aria-pressed={!activeTag}\n          className={`rounded-full px-3 py-1 text-xs font-medium transition focus:outline-none focus:ring-2 focus:ring-offset-1 ${\n            !activeTag\n              ? \"bg-indigo-600 text-white focus:ring-indigo-300\"\n              : \"bg-slate-100 text-slate-600 hover:bg-indigo-50 hover:text-indigo-600\"\n          }`}>\n          전체\n        </button>\n        {tags.map((tag) => {\n          const isActive = activeTag === tag;\n          return (\n            <button\n              key={tag}\n              type='button'\n              onClick={() => handleClick(tag)}\n              aria-pressed={isActive}\n              className={`rounded-full px-3 py-1 text-xs font-medium transition focus:outline-none focus:ring-2 focus:ring-offset-1 ${\n                isActive\n                  ? \"bg-indigo-600 text-white focus:ring-indigo-300\"\n                  : \"bg-slate-100 text-slate-600 hover:bg-indigo-50 hover:text-indigo-600\"\n              }`}>\n              {tag}\n            </button>\n          );\n        })}\n      </div>\n    </section>\n  );\n}\n\nfunction CommunityCard() {\n  return (\n    <section className='rounded-2xl border border-indigo-100 bg-indigo-50/70 p-6 text-slate-800'>\n      <h2 className='text-lg font-semibold text-slate-900'>\n        개발자로서의 여정을 기록하고 있어요\n      </h2>\n      <p className='mt-3 text-sm leading-relaxed text-slate-600'>\n        최신 글은 블로그에서, 프로젝트 히스토리는 포트폴리오에서 확인해 주세요.\n        꾸준히 업데이트하며 성장 과정을 공유합니다.\n      </p>\n      <div className='mt-4 flex flex-wrap gap-3'>\n        <Link\n          to={blogPaths.home}\n          className='inline-flex items-center rounded-full bg-indigo-600 px-4 py-2 text-sm font-medium text-white transition hover:bg-indigo-700'>\n          블로그 최신 글 보기\n        </Link>\n        <Link\n          to={portfolioPath}\n          className='inline-flex items-center rounded-full bg-white px-4 py-2 text-sm font-medium text-indigo-600 shadow-sm transition hover:bg-indigo-50'>\n          포트폴리오 열람\n        </Link>\n      </div>\n    </section>\n  );\n}\n\nexport default function BlogLayout() {\n  const sortedPosts = useMemo(\n    () => [...posts].sort((a, b) => new Date(b.date) - new Date(a.date)),\n    []\n  );\n\n  const [activeTag, setActiveTag] = useState(null);\n\n  const filteredPosts = useMemo(() => {\n    if (!activeTag) {\n      return sortedPosts;\n    }\n    return sortedPosts.filter((post) => post.tags?.includes(activeTag));\n  }, [sortedPosts, activeTag]);\n\n  const featuredPost = filteredPosts[0];\n  const listPosts = filteredPosts.slice(1);\n  const trendingPosts = filteredPosts.slice(0, 4);\n  const uniqueTags = useMemo(\n    () => Array.from(new Set(sortedPosts.flatMap((post) => post.tags ?? []))),\n    [sortedPosts]\n  );\n\n  const handleTagClick = (tag) => {\n    setActiveTag((current) => (current === tag ? null : tag));\n  };\n\n  return (\n    <div className='min-h-screen bg-slate-100 text-slate-900'>\n      <SiteHeader />\n      <main className='mx-auto w-full max-w-6xl px-4 py-8 sm:px-6 sm:py-10'>\n        <div className='grid grid-cols-1 gap-8 lg:grid-cols-[minmax(0,2fr)_minmax(0,1fr)]'>\n          <div className='space-y-6'>\n            <FeaturedPost\n              post={featuredPost}\n              activeTag={activeTag}\n              onTagClick={handleTagClick}\n            />\n            <PostList\n              posts={listPosts}\n              title={\n                activeTag ? `${activeTag} 태그 글` : featuredPost ? \"최신 글\" : \"모든 글\"\n              }\n              activeTag={activeTag}\n              onTagClick={handleTagClick}\n            />\n          </div>\n          <aside className='space-y-6'>\n            <LatestStack items={trendingPosts} />\n            <TagSuggestions\n              tags={uniqueTags}\n              activeTag={activeTag}\n              onTagClick={handleTagClick}\n            />\n            <CommunityCard />\n          </aside>\n        </div>\n      </main>\n    </div>\n  );\n}\n","const posts = [\n  {\n    slug: \"welcome-to-the-new-blog\",\n    title: \"블로그를 새로 시작합니다\",\n    description:\n      \"포트폴리오 홈페이지를 블로그 중심으로 개편하면서 앞으로 다룰 주제와 방향을 정리했습니다.\",\n    date: \"2024-04-30\",\n    tags: [\"#커뮤니티\", \"#기획\", \"#회고\"],\n    author: \"Choi Developer\",    coverGradient: \"from-indigo-500 via-purple-500 to-pink-500\",\n    readingMinutes: 1,\n    contentPath: \"/posts/welcome-to-the-new-blog.md\",\n  },\n  {\n    slug: \"building-a-personal-dev-blog\",\n    title: \"개발 블로그를 직접 만들며 배운 점\",\n    description:\n      \"정적 페이지 기반의 개인 홈페이지에 블로그 기능을 얹기까지의 시행착오와 배운 점을 정리했습니다.\",\n    date: \"2024-03-27\",\n    tags: [\"#React\", \"#Frontend\", \"#개발환경\"],\n    author: \"Choi Developer\",    coverGradient: \"from-slate-900 via-slate-700 to-slate-500\",\n    readingMinutes: 1,\n    contentPath: \"/posts/building-a-personal-dev-blog.md\",\n  },\n  {\n    slug: \"stack-decisions-for-2024\",\n    title: \"2024년 개발 스택 선택 기준\",\n    description:\n      \"업무와 사이드 프로젝트에서 사용 중인 기술 스택을 정리하고, 선택 기준을 공유합니다.\",\n    date: \"2024-02-18\",\n    tags: [\"#기술스택\", \"#생산성\", \"#개발문화\"],\n    author: \"Choi Developer\",    coverGradient: \"from-amber-400 via-orange-500 to-rose-500\",\n    readingMinutes: 1,\n    contentPath: \"/posts/stack-decisions-for-2024.md\",\n  },\n  {\n    slug: \"shipping-side-project-fast\",\n    title: \"사이드 프로젝트를 빠르게 출시하는 5단계\",\n    description:\n      \"아이디어를 검증하고 MVP를 완성해 실제 사용자 앞에 내놓기까지의 워크플로우를 정리했습니다.\",\n    date: \"2024-01-22\",\n    tags: [\"#Product\", \"#스타트업\", \"#MVP\"],\n    author: \"Choi Developer\",    coverGradient: \"from-sky-400 via-cyan-500 to-emerald-500\",\n    readingMinutes: 1,\n    contentPath: \"/posts/shipping-side-project-fast.md\",\n  },\n  {\n    slug: \"devto-style-ui-breakdown\",\n    title: \"dev.to 스타일 UI를 Tailwind로 구현하며 배운 것\",\n    description:\n      \"커뮤니티형 블로그 레이아웃을 재구성하면서 고려한 컴포넌트 구조와 반응형 전략을 공유합니다.\",\n    date: \"2023-12-08\",\n    tags: [\"#Tailwind\", \"#UI/UX\", \"#리팩터링\"],\n    author: \"Choi Developer\",    coverGradient: \"from-violet-500 via-indigo-500 to-blue-500\",\n    readingMinutes: 1,\n    contentPath: \"/posts/devto-style-ui-breakdown.md\",\n  },\n  {\n    slug: \"elasticsearch-core-guide\",\n    title: \"Elasticsearch 핵심 개념 정리\",\n    description:\n      \"클러스터, 샤드, 매핑부터 모니터링 지표까지 Elasticsearch 구조와 운영 개념을 정리했습니다.\",\n    date: \"2024-05-02\",\n    tags: [\"#Elasticsearch\", \"#검색\", \"#운영\"],\n    author: \"Choi Developer\",    coverGradient: \"from-emerald-500 via-teal-500 to-blue-500\",\n    readingMinutes: 3,\n    contentPath: \"/posts/elasticsearch-core-guide.md\",\n  },\n];\n\nexport default posts;\n","const formatter = new Intl.DateTimeFormat(\"ko-KR\", {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n});\n\nconst TABLE_BLOCK_PATTERN =\n  String.raw`(^\\|.*\\|\\r?\\n\\|[-:|\\s]+\\|\\r?\\n(?:\\|.*\\|\\r?\\n?)*)`;\n\nexport function formatDate(dateString) {\n  try {\n    return formatter.format(new Date(dateString));\n  } catch (error) {\n    return dateString;\n  }\n}\n\nexport function calculateReadingTime(content) {\n  if (!content) {\n    return 1;\n  }\n  const words = content\n    .replace(/\\s+/g, \" \")\n    .trim()\n    .split(\" \")\n    .filter(Boolean).length;\n  return Math.max(1, Math.round(words / 200));\n}\n\nexport function splitMarkdownContent(content) {\n  if (!content) {\n    return [];\n  }\n  const results = [];\n  const tableRegex = new RegExp(TABLE_BLOCK_PATTERN, \"gm\");\n  let lastIndex = 0;\n  let match;\n\n  while ((match = tableRegex.exec(content)) !== null) {\n    const { index } = match;\n    if (index > lastIndex) {\n      const markdownBlock = content.slice(lastIndex, index);\n      if (markdownBlock.trim()) {\n        results.push({ type: \"markdown\", value: markdownBlock });\n      }\n    }\n\n    results.push({ type: \"table\", value: match[0].trim() });\n    lastIndex = tableRegex.lastIndex;\n  }\n\n  if (lastIndex < content.length) {\n    const markdownBlock = content.slice(lastIndex);\n    if (markdownBlock.trim()) {\n      results.push({ type: \"markdown\", value: markdownBlock });\n    }\n  }\n\n  return results.length ? results : [{ type: \"markdown\", value: content }];\n}\n\nexport function parseMarkdownTable(tableBlock) {\n  if (!tableBlock) {\n    return { headers: [], rows: [] };\n  }\n\n  const lines = tableBlock\n    .trim()\n    .split(/\\r?\\n/)\n    .filter(Boolean);\n\n  if (lines.length < 2) {\n    return { headers: [], rows: [] };\n  }\n\n  const headers = extractCells(lines[0]);\n  const rows = lines\n    .slice(2)\n    .map((line) => extractCells(line))\n    .filter((cells) => cells.some((cell) => cell));\n\n  return { headers, rows };\n}\n\nfunction extractCells(line) {\n  return line\n    .split(\"|\")\n    .slice(1, -1)\n    .map((cell) => cell.trim());\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["EmptyState","_ref","activeTag","_jsx","className","children","concat","PostList","_ref2","posts","providedPosts","title","onTagClick","sortedPosts","postsData","sort","a","b","Date","date","length","_jsxs","map","post","_post$readingMinutes","_post$tags","readingTime","readingMinutes","Link","to","blogPaths","detailOf","slug","dateTime","formatDate","description","tags","tag","isActive","type","onClick","event","handleTagClick","preventDefault","stopPropagation","fill","viewBox","d","stroke","strokeLinecap","strokeLinejoin","strokeWidth","primaryLinks","label","path","home","isPrimary","portfolioPath","SiteHeader","placeholder","cx","cy","r","FeaturedPost","_post$coverGradient","gradient","coverGradient","LatestStack","_ref3","items","index","TagSuggestions","_ref4","handleClick","CommunityCard","BlogLayout","useMemo","setActiveTag","useState","filteredPosts","filter","_post$tags2","includes","featuredPost","listPosts","slice","trendingPosts","uniqueTags","Array","from","Set","flatMap","_post$tags3","current","author","contentPath","formatter","Intl","DateTimeFormat","year","month","day","TABLE_BLOCK_PATTERN","String","raw","_templateObject","_taggedTemplateLiteral","dateString","format","error","calculateReadingTime","content","words","replace","trim","split","Boolean","Math","max","round","splitMarkdownContent","results","tableRegex","RegExp","match","lastIndex","exec","markdownBlock","push","value","parseMarkdownTable","tableBlock","headers","rows","lines","extractCells","line","cells","some","cell","strings","Object","freeze","defineProperties"],"sourceRoot":""}