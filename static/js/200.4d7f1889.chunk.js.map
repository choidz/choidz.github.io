{"version":3,"file":"static/js/200.4d7f1889.chunk.js","mappings":"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","sources":["blog/post-list.js","blog/layout.js","blog/usePosts.js","blog/utils.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { blogPaths } from \"../routes/paths\";\nimport { formatDate } from \"./utils\";\n\nfunction EmptyState({ activeTag }) {\n  return (\n    <div className='rounded-2xl border border-dashed border-brand-border bg-brand-surface p-10 text-center text-brand-muted'>\n      {activeTag\n        ? `'${activeTag}' 태그로 등록된 글이 없습니다. 다른 태그를 선택해 보세요!`\n        : \"아직 등록된 글이 없습니다. 조금만 기다려 주세요!\"}\n    </div>\n  );\n}\n\nexport default function PostList({\n  posts: providedPosts = [],\n  title,\n  activeTag,\n  onTagClick,\n}) {\n  const handleTagClick = (event, tag) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (onTagClick) {\n      onTagClick(tag);\n    }\n  };\n\n  const sortedPosts = [...providedPosts].sort(\n    (a, b) => new Date(b.date) - new Date(a.date)\n  );\n\n  if (!sortedPosts.length) {\n    return <EmptyState activeTag={activeTag} />;\n  }\n\n  return (\n    <div className='space-y-3'>\n      {title ? (\n        <h2 className='text-lg font-semibold text-brand-foreground'>{title}</h2>\n      ) : null}\n      {sortedPosts.map((post) => {\n        const readingTime = post.readingMinutes ?? 1;\n        return (\n          <article\n            key={post.slug}\n            className='group overflow-hidden rounded-2xl border border-brand-border bg-brand-surface transition hover:border-brand-border-strong hover:shadow-md'>\n            <Link\n              to={blogPaths.detailOf(post.slug)}\n              className='flex h-full flex-col gap-4 px-6 py-5 sm:px-8 sm:py-6'>\n              <div className='flex flex-wrap items-center gap-2 text-xs text-brand-muted sm:text-sm'>\n                <time dateTime={post.date}>{formatDate(post.date)}</time>\n                <span className='hidden text-brand-border-strong sm:inline'>•</span>\n                <span>{`${readingTime}분 분량`}</span>\n              </div>\n              <div>\n                <h2 className='text-xl font-semibold text-brand-foreground transition group-hover:text-brand-accent sm:text-2xl'>\n                  {post.title}\n                </h2>\n                <p className='mt-2 text-sm leading-relaxed text-brand-muted sm:text-base'>\n                  {post.description}\n                </p>\n              </div>\n              <div className='flex flex-wrap gap-2'>\n                {post.tags?.map((tag) => {\n                  const isActive = activeTag === tag;\n                  return (\n                    <button\n                      key={tag}\n                      type='button'\n                      onClick={(event) => handleTagClick(event, tag)}\n                      className={`rounded-full px-3 py-1 text-xs font-medium transition focus:outline-none focus:ring-2 focus:ring-offset-1 ${\n                        isActive\n                          ? \"bg-brand-accent text-white focus:ring-brand-accent-soft\"\n                          : \"bg-brand-accent-soft text-brand-accent hover:bg-brand-border-strong\"\n                      }`}>\n                      {tag}\n                    </button>\n                  );\n                })}\n              </div>\n              <div className='mt-auto flex items-center justify-between text-xs text-brand-muted sm:text-sm'>\n                <span>{`${readingTime}분 분량`}</span>\n                <span className='inline-flex items-center gap-1 font-medium text-brand-accent'>\n                  계속 읽기\n                  <svg\n                    aria-hidden='true'\n                    className='h-3.5 w-3.5'\n                    fill='none'\n                    viewBox='0 0 12 12'>\n                    <path\n                      d='M4 2l4 4-4 4'\n                      stroke='currentColor'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      strokeWidth='1.5'\n                    />\n                  </svg>\n                </span>\n              </div>\n            </Link>\n          </article>\n        );\n      })}\n    </div>\n  );\n}\n","import { useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { blogPaths, portfolioPath } from \"../routes/paths\";\nimport PostList from \"./post-list\";\nimport usePosts from \"./usePosts\";\nimport { formatDate } from \"./utils\";\n\nconst primaryLinks = [\n  { label: \"블로그\", path: blogPaths.home, isPrimary: true },\n  { label: \"포트폴리오\", path: portfolioPath, isPrimary: false },\n];\n\nfunction SiteHeader() {\n  return (\n    <header className='border-b border-brand-border bg-brand-surface'>\n      <div className='mx-auto flex h-16 w-full max-w-6xl items-center justify-between gap-4 px-4 sm:px-6'>\n        <Link\n          to={blogPaths.home}\n          className='inline-flex items-center gap-2 text-xl font-bold text-brand-foreground'>\n          <span className='hidden text-brand-muted sm:inline'>Tech Notes</span>\n        </Link>\n        <div className='hidden w-full max-w-md md:block'>\n          <label className='relative block'>\n            <span className='sr-only'>검색</span>\n            <input\n              className='w-full rounded-full border border-brand-border bg-brand-background py-2 pl-10 pr-4 text-sm text-brand-foreground placeholder:text-brand-muted focus:border-brand-accent focus:outline-none focus:ring-2 focus:ring-brand-accent-soft'\n              placeholder='키워드로 글을 검색해 보세요'\n              type='search'\n            />\n            <svg\n              aria-hidden='true'\n              className='absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-slate-400'\n              fill='none'\n              viewBox='0 0 16 16'>\n              <path\n                d='M11.25 11.25L14 14'\n                stroke='currentColor'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth='1.5'\n              />\n              <circle\n                cx='7.5'\n                cy='7.5'\n                r='4.75'\n                stroke='currentColor'\n                strokeWidth='1.5'\n              />\n            </svg>\n          </label>\n        </div>\n        <nav className='flex items-center gap-2 text-sm font-medium text-brand-muted'>\n          {primaryLinks.map(({ label, path, isPrimary }) => (\n            <Link\n              key={label}\n              to={path}\n              className={`inline-flex items-center rounded-full px-4 py-1.5 transition ${\n                isPrimary\n                  ? \"bg-brand-accent text-white shadow-sm hover:bg-brand-accent-hover\"\n                  : \"border border-brand-border text-brand-muted hover:border-brand-border-strong hover:bg-brand-accent-soft hover:text-brand-accent\"\n              }`}>\n              {label}\n            </Link>\n          ))}\n        </nav>\n      </div>\n    </header>\n  );\n}\n\nfunction LatestStack({ items }) {\n  if (!items?.length) {\n    return null;\n  }\n\n  return (\n    <section className='rounded-2xl border border-brand-border bg-brand-surface'>\n      <div className='border-b border-brand-border px-5 py-4'>\n        <h2 className='text-sm font-semibold uppercase tracking-widest text-brand-muted'>\n          최신 등록 글\n        </h2>\n      </div>\n      <ol className='space-y-4 px-5 py-5'>\n        {items.map((post, index) => (\n          <li key={post.slug} className='flex items-start gap-3'>\n            <span className='mt-0.5 inline-flex h-6 w-6 items-center justify-center rounded-full bg-brand-accent-soft text-xs font-semibold text-brand-muted'>\n              {index + 1}\n            </span>\n            <div className='space-y-1'>\n              <Link\n                to={blogPaths.detailOf(post.slug)}\n                className='text-sm font-semibold text-brand-foreground transition hover:text-brand-accent'>\n                {post.title}\n              </Link>\n              <p className='text-xs text-brand-muted'>{formatDate(post.date)}</p>\n            </div>\n          </li>\n        ))}\n      </ol>\n    </section>\n  );\n}\n\nfunction TagSuggestions({ tags, activeTag, onTagClick }) {\n  if (!tags?.length) {\n    return null;\n  }\n\n  const handleClick = (tag) => {\n    onTagClick?.(tag);\n  };\n\n  return (\n    <section className='rounded-2xl border border-brand-border bg-brand-surface'>\n      <div className='border-b border-brand-border px-5 py-4'>\n        <h2 className='text-sm font-semibold uppercase tracking-widest text-brand-muted'>\n          태그\n        </h2>\n      </div>\n      <div className='flex flex-wrap gap-2 px-5 py-5'>\n        <button\n          type='button'\n          onClick={() => handleClick(null)}\n          aria-pressed={!activeTag}\n          className={`rounded-full px-3 py-1 text-xs font-medium transition focus:outline-none focus:ring-2 focus:ring-offset-1 ${\n            !activeTag\n              ? \"bg-brand-accent text-white focus:ring-brand-accent-soft\"\n              : \"bg-brand-background text-brand-muted hover:bg-brand-accent-soft hover:text-brand-accent\"\n          }`}>\n          전체\n        </button>\n        {tags.map((tag) => {\n          const isActive = activeTag === tag;\n          return (\n            <button\n              key={tag}\n              type='button'\n              onClick={() => handleClick(tag)}\n              aria-pressed={isActive}\n              className={`rounded-full px-3 py-1 text-xs font-medium transition focus:outline-none focus:ring-2 focus:ring-offset-1 ${\n                isActive\n                  ? \"bg-brand-accent text-white focus:ring-brand-accent-soft\"\n                  : \"bg-brand-background text-brand-muted hover:bg-brand-accent-soft hover:text-brand-accent\"\n              }`}>\n              {tag}\n            </button>\n          );\n        })}\n      </div>\n    </section>\n  );\n}\n\nfunction CommunityCard() {\n  return (\n    <section className='rounded-2xl border border-brand-border-strong bg-brand-accent-soft/60 p-6 text-brand-foreground'>\n      <h2 className='text-lg font-semibold text-brand-foreground'>\n        개발자로서의 여정을 기록하고 있어요\n      </h2>\n      <p className='mt-3 text-sm leading-relaxed text-brand-muted'>\n        최신 글은 블로그에서, 프로젝트 히스토리는 포트폴리오에서 확인해 주세요.\n        꾸준히 업데이트하며 성장 과정을 공유합니다.\n      </p>\n      <div className='mt-4 flex flex-wrap gap-3'>\n        <Link\n          to={blogPaths.home}\n          className='inline-flex items-center rounded-full bg-brand-accent px-4 py-2 text-sm font-medium text-white transition hover:bg-brand-accent-hover'>\n          블로그 최신 글 보기\n        </Link>\n        <Link\n          to={portfolioPath}\n          className='inline-flex items-center rounded-full bg-brand-surface px-4 py-2 text-sm font-medium text-brand-accent shadow-sm transition hover:bg-brand-accent-soft'>\n          포트폴리오 열람\n        </Link>\n      </div>\n    </section>\n  );\n}\n\nexport default function BlogLayout() {\n  const { posts, isLoading, error } = usePosts();\n  const sortedPosts = useMemo(\n    () => [...posts].sort((a, b) => new Date(b.date) - new Date(a.date)),\n    [posts]\n  );\n\n  const [activeTag, setActiveTag] = useState(null);\n\n  const filteredPosts = useMemo(() => {\n    if (!activeTag) {\n      return sortedPosts;\n    }\n    return sortedPosts.filter((post) => post.tags?.includes(activeTag));\n  }, [sortedPosts, activeTag]);\n\n  const trendingPosts = filteredPosts.slice(0, 4);\n  const uniqueTags = useMemo(\n    () => Array.from(new Set(sortedPosts.flatMap((post) => post.tags ?? []))),\n    [sortedPosts]\n  );\n\n  const handleTagClick = (tag) => {\n    setActiveTag((current) => (current === tag ? null : tag));\n  };\n\n  return (\n    <div className='min-h-screen bg-brand-background text-brand-foreground'>\n      <SiteHeader />\n      <main className='mx-auto w-full max-w-6xl px-4 py-8 sm:px-6 sm:py-10'>\n        {isLoading ? (\n          <p className='text-sm text-brand-muted'>게시글을 불러오는 중입니다…</p>\n        ) : error ? (\n          <p className='rounded-lg bg-rose-50 p-4 text-sm text-rose-600'>\n            {error}\n          </p>\n        ) : !filteredPosts.length ? (\n          <div className='rounded-2xl border border-dashed border-brand-border bg-brand-surface p-10 text-center text-brand-muted'>\n            게시글이 없습니다. 새로운 글을 작성해 주세요.\n          </div>\n        ) : (\n          <div className='grid grid-cols-1 gap-8 lg:grid-cols-[minmax(0,2fr)_minmax(0,1fr)]'>\n            <div className='space-y-6'>\n              <PostList\n                posts={filteredPosts}\n                title={activeTag ? `${activeTag} 태그 글` : \"모든 글\"}\n                activeTag={activeTag}\n                onTagClick={handleTagClick}\n              />\n            </div>\n            <aside className='space-y-6'>\n              <LatestStack items={trendingPosts} />\n              <TagSuggestions\n                tags={uniqueTags}\n                activeTag={activeTag}\n                onTagClick={handleTagClick}\n              />\n              <CommunityCard />\n            </aside>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nconst POSTS_MANIFEST_URL = \"/posts/index.json\";\n\nexport function usePosts() {\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    let cancelled = false;\n\n    async function loadPosts() {\n      try {\n        setIsLoading(true);\n        const response = await fetch(POSTS_MANIFEST_URL);\n        if (!response.ok) {\n          throw new Error(`포스트 목록을 불러오지 못했습니다 (status ${response.status})`);\n        }\n        const data = await response.json();\n        if (!cancelled) {\n          setPosts(Array.isArray(data) ? data : []);\n          setIsLoading(false);\n        }\n      } catch (fetchError) {\n        if (!cancelled) {\n          setError(fetchError.message);\n          setIsLoading(false);\n        }\n      }\n    }\n\n    loadPosts();\n\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n\n  return { posts, isLoading, error };\n}\n\nexport default usePosts;\n","const formatter = new Intl.DateTimeFormat(\"ko-KR\", {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n});\n\nconst TABLE_BLOCK_PATTERN =\n  String.raw`(^\\|.*\\|\\r?\\n\\|[-:|\\s]+\\|\\r?\\n(?:\\|.*\\|\\r?\\n?)*)`;\n\nexport function formatDate(dateString) {\n  try {\n    return formatter.format(new Date(dateString));\n  } catch (error) {\n    return dateString;\n  }\n}\n\nexport function calculateReadingTime(content) {\n  if (!content) {\n    return 1;\n  }\n  const words = content\n    .replace(/\\s+/g, \" \")\n    .trim()\n    .split(\" \")\n    .filter(Boolean).length;\n  return Math.max(1, Math.round(words / 200));\n}\n\nexport function splitMarkdownContent(content) {\n  if (!content) {\n    return [];\n  }\n  const results = [];\n  const tableRegex = new RegExp(TABLE_BLOCK_PATTERN, \"gm\");\n  let lastIndex = 0;\n  let match;\n\n  while ((match = tableRegex.exec(content)) !== null) {\n    const { index } = match;\n    if (index > lastIndex) {\n      const markdownBlock = content.slice(lastIndex, index);\n      if (markdownBlock.trim()) {\n        results.push({ type: \"markdown\", value: markdownBlock });\n      }\n    }\n\n    results.push({ type: \"table\", value: match[0].trim() });\n    lastIndex = tableRegex.lastIndex;\n  }\n\n  if (lastIndex < content.length) {\n    const markdownBlock = content.slice(lastIndex);\n    if (markdownBlock.trim()) {\n      results.push({ type: \"markdown\", value: markdownBlock });\n    }\n  }\n\n  return results.length ? results : [{ type: \"markdown\", value: content }];\n}\n\nexport function parseMarkdownTable(tableBlock) {\n  if (!tableBlock) {\n    return { headers: [], rows: [] };\n  }\n\n  const lines = tableBlock\n    .trim()\n    .split(/\\r?\\n/)\n    .filter(Boolean);\n\n  if (lines.length < 2) {\n    return { headers: [], rows: [] };\n  }\n\n  const headers = extractCells(lines[0]);\n  const rows = lines\n    .slice(2)\n    .map((line) => extractCells(line))\n    .filter((cells) => cells.some((cell) => cell));\n\n  return { headers, rows };\n}\n\nfunction extractCells(line) {\n  return line\n    .split(\"|\")\n    .slice(1, -1)\n    .map((cell) => cell.trim());\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["EmptyState","_ref","activeTag","_jsx","className","children","concat","PostList","_ref2","posts","providedPosts","title","onTagClick","sortedPosts","sort","a","b","Date","date","length","_jsxs","map","post","_post$readingMinutes","_post$tags","readingTime","readingMinutes","Link","to","blogPaths","detailOf","slug","dateTime","formatDate","description","tags","tag","isActive","type","onClick","event","handleTagClick","preventDefault","stopPropagation","fill","viewBox","d","stroke","strokeLinecap","strokeLinejoin","strokeWidth","primaryLinks","label","path","home","isPrimary","portfolioPath","SiteHeader","placeholder","cx","cy","r","LatestStack","items","index","TagSuggestions","_ref3","handleClick","CommunityCard","BlogLayout","isLoading","error","usePosts","useMemo","setActiveTag","useState","filteredPosts","filter","includes","trendingPosts","slice","uniqueTags","Array","from","Set","flatMap","_post$tags2","current","setPosts","setIsLoading","setError","useEffect","cancelled","async","response","fetch","ok","Error","status","data","json","isArray","fetchError","message","loadPosts","formatter","Intl","DateTimeFormat","year","month","day","TABLE_BLOCK_PATTERN","String","raw","_templateObject","_taggedTemplateLiteral","dateString","format","calculateReadingTime","content","words","replace","trim","split","Boolean","Math","max","round","splitMarkdownContent","results","tableRegex","RegExp","match","lastIndex","exec","markdownBlock","push","value","parseMarkdownTable","tableBlock","headers","rows","lines","extractCells","line","cells","some","cell","strings","Object","freeze","defineProperties"],"sourceRoot":""}